/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Box, BoxInterface } from "../Box";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_boxAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_unboxFee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "landId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "OpenBox",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "OPEN_BOX_WITH_SIG_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "openBox",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "openBoxSigNonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_boxAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "setBoxInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "setReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_unboxFee",
        type: "uint256",
      },
    ],
    name: "setUnboxFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unboxFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000fc638038062000fc683398181016040528101906200003791906200029c565b620000576200004b6200012b60201b60201c565b6200013360201b60201c565b83600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600481905550505050506200030e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200022982620001fc565b9050919050565b6200023b816200021c565b81146200024757600080fd5b50565b6000815190506200025b8162000230565b92915050565b6000819050919050565b620002768162000261565b81146200028257600080fd5b50565b60008151905062000296816200026b565b92915050565b60008060008060808587031215620002b957620002b8620001f7565b5b6000620002c9878288016200024a565b9450506020620002dc878288016200024a565b9350506040620002ef878288016200024a565b9250506060620003028782880162000285565b91505092959194509250565b610ca8806200031e6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063a7b28f6411610066578063a7b28f6414610133578063b1e5e2b714610151578063c129267a1461016d578063e26137521461018b578063f2fde38b146101a75761009e565b8063715018a6146100a3578063718da7ee146100ad5780637ebbcf60146100c95780637f8dd3dd146100e55780638da5cb5b14610115575b600080fd5b6100ab6101c3565b005b6100c760048036038101906100c291906108bc565b61024b565b005b6100e360048036038101906100de919061091f565b61030b565b005b6100ff60048036038101906100fa91906108bc565b610391565b60405161010c919061095b565b60405180910390f35b61011d6103a9565b60405161012a9190610985565b60405180910390f35b61013b6103d2565b604051610148919061095b565b60405180910390f35b61016b6004803603810190610166919061091f565b6103d8565b005b61017561052d565b60405161018291906109b9565b60405180910390f35b6101a560048036038101906101a091906109d4565b610551565b005b6101c160048036038101906101bc91906108bc565b610695565b005b6101cb61078d565b73ffffffffffffffffffffffffffffffffffffffff166101e96103a9565b73ffffffffffffffffffffffffffffffffffffffff161461023f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023690610a84565b60405180910390fd5b6102496000610795565b565b61025361078d565b73ffffffffffffffffffffffffffffffffffffffff166102716103a9565b73ffffffffffffffffffffffffffffffffffffffff16146102c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102be90610a84565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61031361078d565b73ffffffffffffffffffffffffffffffffffffffff166103316103a9565b73ffffffffffffffffffffffffffffffffffffffff1614610387576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037e90610a84565b60405180910390fd5b8060048190555050565b60056020528060005260406000206000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60045481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663156e29f6336001846040518463ffffffff1660e01b815260040161043893929190610ae9565b600060405180830381600087803b15801561045257600080fd5b505af1158015610466573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846004546104da9190610b4f565b6040518463ffffffff1660e01b81526004016104f893929190610ba9565b600060405180830381600087803b15801561051257600080fd5b505af1158015610526573d6000803e3d6000fd5b5050505050565b7f340f985e7f044bd33fb4729b461b92b4c0712607436585a5f7c8d1334cb8fa8081565b61055961078d565b73ffffffffffffffffffffffffffffffffffffffff166105776103a9565b73ffffffffffffffffffffffffffffffffffffffff16146105cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490610a84565b60405180910390fd5b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b61069d61078d565b73ffffffffffffffffffffffffffffffffffffffff166106bb6103a9565b73ffffffffffffffffffffffffffffffffffffffff1614610711576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070890610a84565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610781576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077890610c52565b60405180910390fd5b61078a81610795565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108898261085e565b9050919050565b6108998161087e565b81146108a457600080fd5b50565b6000813590506108b681610890565b92915050565b6000602082840312156108d2576108d1610859565b5b60006108e0848285016108a7565b91505092915050565b6000819050919050565b6108fc816108e9565b811461090757600080fd5b50565b600081359050610919816108f3565b92915050565b60006020828403121561093557610934610859565b5b60006109438482850161090a565b91505092915050565b610955816108e9565b82525050565b6000602082019050610970600083018461094c565b92915050565b61097f8161087e565b82525050565b600060208201905061099a6000830184610976565b92915050565b6000819050919050565b6109b3816109a0565b82525050565b60006020820190506109ce60008301846109aa565b92915050565b6000806000606084860312156109ed576109ec610859565b5b60006109fb868287016108a7565b9350506020610a0c868287016108a7565b9250506040610a1d868287016108a7565b9150509250925092565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610a6e602083610a27565b9150610a7982610a38565b602082019050919050565b60006020820190508181036000830152610a9d81610a61565b9050919050565b6000819050919050565b6000819050919050565b6000610ad3610ace610ac984610aa4565b610aae565b6108e9565b9050919050565b610ae381610ab8565b82525050565b6000606082019050610afe6000830186610976565b610b0b6020830185610ada565b610b18604083018461094c565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b5a826108e9565b9150610b65836108e9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b9e57610b9d610b20565b5b828202905092915050565b6000606082019050610bbe6000830186610976565b610bcb6020830185610976565b610bd8604083018461094c565b949350505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610c3c602683610a27565b9150610c4782610be0565b604082019050919050565b60006020820190508181036000830152610c6b81610c2f565b905091905056fea2646970667358221220b2050bfe65701f3a999ecfc93fa1d8932180e06c5ad170a8f492470b33d0741164736f6c63430008080033";

type BoxConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BoxConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Box__factory extends ContractFactory {
  constructor(...args: BoxConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Box";
  }

  deploy(
    _boxAddress: string,
    _tokenAddress: string,
    _receiver: string,
    _unboxFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Box> {
    return super.deploy(
      _boxAddress,
      _tokenAddress,
      _receiver,
      _unboxFee,
      overrides || {}
    ) as Promise<Box>;
  }
  getDeployTransaction(
    _boxAddress: string,
    _tokenAddress: string,
    _receiver: string,
    _unboxFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _boxAddress,
      _tokenAddress,
      _receiver,
      _unboxFee,
      overrides || {}
    );
  }
  attach(address: string): Box {
    return super.attach(address) as Box;
  }
  connect(signer: Signer): Box__factory {
    return super.connect(signer) as Box__factory;
  }
  static readonly contractName: "Box";
  public readonly contractName: "Box";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BoxInterface {
    return new utils.Interface(_abi) as BoxInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Box {
    return new Contract(address, _abi, signerOrProvider) as Box;
  }
}
