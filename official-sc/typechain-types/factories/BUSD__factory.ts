/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BUSD, BUSDInterface } from "../BUSD";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600481526020017f42555344000000000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f425553440000000000000000000000000000000000000000000000000000000081525081600390805190602001906200009692919062000283565b508060049080519060200190620000af92919062000283565b505050620000f133620000c7620000f760201b60201c565b600a620000d59190620004cd565b620f4240620000e591906200051e565b6200010060201b60201c565b620006f2565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000173576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200016a90620005e0565b60405180910390fd5b62000187600083836200027960201b60201c565b80600260008282546200019b919062000602565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620001f2919062000602565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000259919062000670565b60405180910390a362000275600083836200027e60201b60201c565b5050565b505050565b505050565b8280546200029190620006bc565b90600052602060002090601f016020900481019282620002b5576000855562000301565b82601f10620002d057805160ff191683800117855562000301565b8280016001018555821562000301579182015b8281111562000300578251825591602001919060010190620002e3565b5b50905062000310919062000314565b5090565b5b808211156200032f57600081600090555060010162000315565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115620003c15780860481111562000399576200039862000333565b5b6001851615620003a95780820291505b8081029050620003b98562000362565b945062000379565b94509492505050565b600082620003dc5760019050620004af565b81620003ec5760009050620004af565b8160018114620004055760028114620004105762000446565b6001915050620004af565b60ff84111562000425576200042462000333565b5b8360020a9150848211156200043f576200043e62000333565b5b50620004af565b5060208310610133831016604e8410600b8410161715620004805782820a9050838111156200047a576200047962000333565b5b620004af565b6200048f84848460016200036f565b92509050818404811115620004a957620004a862000333565b5b81810290505b9392505050565b6000819050919050565b600060ff82169050919050565b6000620004da82620004b6565b9150620004e783620004c0565b9250620005167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620003ca565b905092915050565b60006200052b82620004b6565b91506200053883620004b6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161562000574576200057362000333565b5b828202905092915050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000620005c8601f836200057f565b9150620005d58262000590565b602082019050919050565b60006020820190508181036000830152620005fb81620005b9565b9050919050565b60006200060f82620004b6565b91506200061c83620004b6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000654576200065362000333565b5b828201905092915050565b6200066a81620004b6565b82525050565b60006020820190506200068760008301846200065f565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620006d557607f821691505b60208210811415620006ec57620006eb6200068d565b5b50919050565b61154f80620007026000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f19146101a357806370a08231146101bf57806395d89b41146101ef578063a457c2d71461020d578063a9059cbb1461023d578063dd62ed3e1461026d576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161029d565b6040516100ce9190610d9d565b60405180910390f35b6100f160048036038101906100ec9190610e58565b61032f565b6040516100fe9190610eb3565b60405180910390f35b61010f610352565b60405161011c9190610edd565b60405180910390f35b61013f600480360381019061013a9190610ef8565b61035c565b60405161014c9190610eb3565b60405180910390f35b61015d61038b565b60405161016a9190610f67565b60405180910390f35b61018d60048036038101906101889190610e58565b610394565b60405161019a9190610eb3565b60405180910390f35b6101bd60048036038101906101b89190610e58565b61043e565b005b6101d960048036038101906101d49190610f82565b61044c565b6040516101e69190610edd565b60405180910390f35b6101f7610494565b6040516102049190610d9d565b60405180910390f35b61022760048036038101906102229190610e58565b610526565b6040516102349190610eb3565b60405180910390f35b61025760048036038101906102529190610e58565b610610565b6040516102649190610eb3565b60405180910390f35b61028760048036038101906102829190610faf565b610633565b6040516102949190610edd565b60405180910390f35b6060600380546102ac9061101e565b80601f01602080910402602001604051908101604052809291908181526020018280546102d89061101e565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b60008061033a6106ba565b90506103478185856106c2565b600191505092915050565b6000600254905090565b6000806103676106ba565b905061037485828561088d565b61037f858585610919565b60019150509392505050565b60006012905090565b60008061039f6106ba565b9050610433818585600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461042e919061107f565b6106c2565b600191505092915050565b6104488282610b9a565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546104a39061101e565b80601f01602080910402602001604051908101604052809291908181526020018280546104cf9061101e565b801561051c5780601f106104f15761010080835404028352916020019161051c565b820191906000526020600020905b8154815290600101906020018083116104ff57829003601f168201915b5050505050905090565b6000806105316106ba565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050838110156105f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ee90611147565b60405180910390fd5b61060482868684036106c2565b60019250505092915050565b60008061061b6106ba565b9050610628818585610919565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610732576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610729906111d9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107999061126b565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108809190610edd565b60405180910390a3505050565b60006108998484610633565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109135781811015610905576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fc906112d7565b60405180910390fd5b61091284848484036106c2565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610989576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098090611369565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f0906113fb565b60405180910390fd5b610a04838383610cfa565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a819061148d565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b1d919061107f565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b819190610edd565b60405180910390a3610b94848484610cff565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c01906114f9565b60405180910390fd5b610c1660008383610cfa565b8060026000828254610c28919061107f565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c7d919061107f565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ce29190610edd565b60405180910390a3610cf660008383610cff565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d3e578082015181840152602081019050610d23565b83811115610d4d576000848401525b50505050565b6000601f19601f8301169050919050565b6000610d6f82610d04565b610d798185610d0f565b9350610d89818560208601610d20565b610d9281610d53565b840191505092915050565b60006020820190508181036000830152610db78184610d64565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610def82610dc4565b9050919050565b610dff81610de4565b8114610e0a57600080fd5b50565b600081359050610e1c81610df6565b92915050565b6000819050919050565b610e3581610e22565b8114610e4057600080fd5b50565b600081359050610e5281610e2c565b92915050565b60008060408385031215610e6f57610e6e610dbf565b5b6000610e7d85828601610e0d565b9250506020610e8e85828601610e43565b9150509250929050565b60008115159050919050565b610ead81610e98565b82525050565b6000602082019050610ec86000830184610ea4565b92915050565b610ed781610e22565b82525050565b6000602082019050610ef26000830184610ece565b92915050565b600080600060608486031215610f1157610f10610dbf565b5b6000610f1f86828701610e0d565b9350506020610f3086828701610e0d565b9250506040610f4186828701610e43565b9150509250925092565b600060ff82169050919050565b610f6181610f4b565b82525050565b6000602082019050610f7c6000830184610f58565b92915050565b600060208284031215610f9857610f97610dbf565b5b6000610fa684828501610e0d565b91505092915050565b60008060408385031215610fc657610fc5610dbf565b5b6000610fd485828601610e0d565b9250506020610fe585828601610e0d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061103657607f821691505b6020821081141561104a57611049610fef565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061108a82610e22565b915061109583610e22565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110ca576110c9611050565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611131602583610d0f565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006111c3602483610d0f565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611255602283610d0f565b9150611260826111f9565b604082019050919050565b6000602082019050818103600083015261128481611248565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006112c1601d83610d0f565b91506112cc8261128b565b602082019050919050565b600060208201905081810360008301526112f0816112b4565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611353602583610d0f565b915061135e826112f7565b604082019050919050565b6000602082019050818103600083015261138281611346565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006113e5602383610d0f565b91506113f082611389565b604082019050919050565b60006020820190508181036000830152611414816113d8565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611477602683610d0f565b91506114828261141b565b604082019050919050565b600060208201905081810360008301526114a68161146a565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006114e3601f83610d0f565b91506114ee826114ad565b602082019050919050565b60006020820190508181036000830152611512816114d6565b905091905056fea26469706673582212205510641bbea3c9c8bd976c7cc4ff27ab5e6b25af0dea3fc055c4ddf082e7b91364736f6c63430008080033";

type BUSDConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BUSDConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BUSD__factory extends ContractFactory {
  constructor(...args: BUSDConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "BUSD";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BUSD> {
    return super.deploy(overrides || {}) as Promise<BUSD>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BUSD {
    return super.attach(address) as BUSD;
  }
  connect(signer: Signer): BUSD__factory {
    return super.connect(signer) as BUSD__factory;
  }
  static readonly contractName: "BUSD";
  public readonly contractName: "BUSD";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BUSDInterface {
    return new utils.Interface(_abi) as BUSDInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): BUSD {
    return new Contract(address, _abi, signerOrProvider) as BUSD;
  }
}
